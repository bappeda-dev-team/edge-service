server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  session:
    timeout: 10m
    redis:
      namespace: kertaskerja:edge
  config:
    import: ""
  cloud:
    config:
      enabled: false
      uri: http://localhost:8888
      request-connect-timeout: 5000
      request-read-timeout: 5000
      fail-fast: false
      retry:
        initial-interval: 1000
        max-interval: 2000
        multiplier: 1.1
        max-attempts: 6
    gateway:
      httpClient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      redis-rate-limiter:
        include-headers: false
      default-filters:
        - SaveSession
        - TokenRelay
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedToken: 1
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exception: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
        - name: CircuitBreaker
          args:
            fallbackUri: forward:/kertaskerja-fallback
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://auth.kertaskerja.cc/realms/TestRealm
      client:
        provider:
          keycloak:
            issuer-uri: https://auth.kertaskerja.cc/realms/TestRealm

        registration:
          keycloak:
            client-id: api-gateway
            client-secret: MNzVAAbw0xBQzuiEjVmLMRtItYA0Y6rp
            scope: openid, roles
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s

logging:
  level:
    org.springframework.web.reactive.function.client.ExchangeFunctions: DEBUG
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: DEBUG
    reactor.netty.http.server: DEBUG
    org.springframework.security.web.server: DEBUG
    io.github.resilience4j: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: configprops, env, gateway, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
      group:
        readiness:
          include: readinessState,redis
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

kertaskerja:
  cors:
    allowed-origins:
      - "http://localhost:3000"
      - "http://dev.kertaskerja.local:3000"
    allowed-headers:
      - "*"
    allowed-methods:
      - "GET"
      - "POST"
      - "PATCH"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
